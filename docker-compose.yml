# docker/docker-compose.yml
version: "3.8"

networks:
  nginx-php-mysql-node:

services:
  #php-service
  php-service:
    container_name: php-fpm
    build:
      args:
        VERSION: ${PHP_VERSION}
      context: docker/php-fpm
    environment:
      - APP_ENV=${APP_ENV}
      - APP_SECRET=${APP_SECRET}
    volumes:
      - ${APP_FOLDER}:/var/www
    depends_on:
      - elasticsearch
    networks:
      - nginx-php-mysql-node
  #nginx-service
  nginx-service:
    container_name: nginx-container
    build:
      args:
        VERSION: ${NGNX_VERSION}
      context: docker/nginx
    volumes:
      - ${APP_FOLDER}:/var/www
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/log:/var/log/nginx
    expose:
      - "8000"
    depends_on:
      - php-service
      - mysql-service
      - elasticsearch
      - elasticsearch-head
    ports:
      - "8000:80"
    networks:
      - nginx-php-mysql-node
  #mysql-service
  mysql-service:
    build:
      args:
        VERSION: ${MYSQL_VERSION}
      context: docker/database
    volumes:
      - ./docker/database/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./docker/database/data:/var/lib/mysql
    #command: ['mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci', '--default-authentication-plugin=mysql_native_password']
    restart: always
    ports:
      - '3306:3306'
    environment:
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_USER: ${DATABASE_USER}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD}
    networks:
      - nginx-php-mysql-node
  #phpmyadmin-service
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin-container
    restart: always
    ports:
      - '8080:80'
    environment:
      PMA_HOST: mysql-service
    networks:
      - nginx-php-mysql-node
    depends_on:
      - mysql-service
  #node-service
  #    node-service:
  #        image: node:${NODE_VERSION}
  #        container_name: node-container
  #        command: npm start
  #        volumes:
  #            - ./nodejs:/var/www/project
  #        working_dir: /var/www/project
  #        ports:
  #            - "3000:3000"
  #        networks:
  #            - nginx-php-mysql-node
  # elasticsearch ———————————————————————————————————————————————————————————
